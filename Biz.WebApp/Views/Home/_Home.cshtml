<div class="jumbotron text-center" id="HomeTop">
    <h1>DOM Behind</h1>
    <p>Promote component-oriented development</p>
</div>

<div class="fixedNavAnchor" id="about">
    <div class="col-lg-4">
        <h3>Binding mechanism</h3><br />

        <p>Want to separate View and ViewModel.</p>
        <p>
            'Observable Object' is useful, but it is difficult to control when used with Enterprise App.
            <br />
            Rich UI does not work like Hello World.
        </p>
        <p>
            We prepared a binding mechanism like XAML for data transfer and a code-behind which defines it.
        </p>
    </div>

    <div class="col-lg-4">
        <h3>Encapsulation of View code</h3><br />

    </div>


    <div class="col-lg-4">

    </div>

</div>

<div class="fixedNavAnchor" id="component">
    <div id="ComponentView">
        @Html.Partial("~/Views/Component/_Component.cshtml")
    </div>
</div>

<div class="fixedNavAnchor" id="contact">
    <div id="ContactUsView">
        @Html.Partial("~/Views/ContactUs/_ContactUs.cshtml")
    </div>
</div>
